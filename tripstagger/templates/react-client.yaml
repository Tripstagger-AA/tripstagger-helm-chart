apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.client.name }}
  name: {{ .Values.client.name }}
spec:
  {{- if not .Values.client.autoscaling.enabled }}
  replicas: {{ .Values.client.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.client.name }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.client.name }}
        tier: {{ .Values.tier.frontend }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - image: "europe-west3-docker.pkg.dev/tripstagger-dev-346819/tripstagger-dev-346819-docker-registry/tripstagger-react-client:{{ .Values.clientVersion}}"
          imagePullPolicy: {{ .Values.client.pullPolicy }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /manifest.json
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            initialDelaySeconds: 60
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /manifest.json
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            initialDelaySeconds: 30
          name: {{ .Values.client.name }}
          env:
            - name: "REACT_APP_ENVIRONMENT"
              value: {{ .Values.env }}
          ports:
            - containerPort: 3000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always


---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ .Values.client.name }}
    tier: {{ .Values.tier.frontend }}
  name: {{ .Values.client.name }}
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
      name: http
  selector:
    app: {{ .Values.client.name }}
  sessionAffinity: None
  type: LoadBalancer