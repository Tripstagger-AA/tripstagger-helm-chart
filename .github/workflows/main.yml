# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
      inputs:
        app:
          description: 'App name to update'
          required: true        
          type: choice
          options:
          - clientVersion
        version:
          description: 'New version'
          required: true
        type:
          description: 'Type of the release'
          required: true        
          default: patch
          type: choice
          options:
          - patch
          - minor
          - major

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  release-change:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      repository-projects: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: PrepareNode
        uses: actions/setup-node@v3
        with:
          node-version: '16.14.2'
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed
      - name: Update component version
        run: |
            pip install pyyaml
            python update-element-version.py $app $version
        env:
          app: ${{ github.event.inputs.app }}
          version: ${{ github.event.inputs.version }}
      - name: setup git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      - name: Commit component version
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "feat(upgrade): Update ${{ github.event.inputs.app}} to version ${{ github.event.inputs.version }}"
          file_pattern: tripstagger/values.yaml
          skip_fetch: true    
          skip_checkout: true
      - uses: egordm/gha-yarn-node-cache@v1
      - name: Install js packages
        run: yarn install
      - name: Set new version
        run: yarn release@$type
        env:
          type: ${{ github.event.inputs.type }}
      - id: auth
        name: Get Token For GCP Artifact Registry
        uses: google-github-actions/auth@v0
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.PROVIDER }}
          service_account: ${{ secrets.SERVICE_EMAIL }}
      - name: Login to Helm
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm registry login -u oauth2accesstoken -p ${{ steps.auth.outputs.access_token }} https://europe-west3-docker.pkg.dev
        env: 
          HELM_EXPERIMENTAL_OCI: 1

